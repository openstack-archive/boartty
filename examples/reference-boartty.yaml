# This is an example ~/.boartty.yaml with an exhaustive listing of
# options with commentary.

# This section lists the servers that Boartty can talk to.  Multiple
# servers may be listed; by default, Boartty will use the first one
# listed.  To select another, simply specify its name on the command
# line.
servers:
  - name: CHANGEME
    url: https://CHANGEME.example.org/
    # Your authentication token for Storyboard. Go to the "Profile"
    # and then "Tokens" (the "key" icon) page in the Storyboard web
    # interface and create a token.  Give it a sufficiently long
    # validity period (e.g., one decade), and copy and paste the value
    # here.
    token: CHANGEME
    lock-file: ~/.boartty.CHANGEME.lock

# Each server section can have the following fields:
# A name that describes the server, to reference on the command line. [required]
#  - name: sample
# The URL of the Storyboard server.  HTTPS should be preferred. [required]
#    url: https://example.org/
# Your authentication token for Storyboard. Go to the "Profile" and
# then "Tokens" (the "key" icon) page in the Storyboard web interface
# and create a token.  Give it a sufficiently long validity period
# (e.g., one decade), and copy and paste the value here.
#    token: CHANGEME
# The location of Boartty's sqlite database.  If you have more than one
# server, you should specify a dburi for any additional servers.
# By default a SQLite database called ~/.boartty.db is used.
#    dburi: sqlite:////home/user/.boartty.db
# If your Storyboard server uses a non-standard certificate chain (e.g. on a test
# server), you can pass a full path to a bundle of CA certificates here:
#    ssl-ca-path: ~/.pki/ca-chain.pem
# In case you do not care about security and want to use a sledgehammer
# approach to SSL, you can set this value to false to turn off certificate
# validation.
#    verify-ssl: true
# By default Boartty logs errors to a file and truncates that file each
# time it starts (so that it does not grow without bound).  If you
# would like to log to a different location, you may specify it here.
#    log-file: ~/.boartty.log
# Boartty listens on a unix domain socket for remote commands at
# ~/.boartty.sock.  You may change the path here:
#    socket: ~/.boartty.sock
# Boartty uses a lock file per server to prevent multiple processes
# from running at the same time. Example:
#    lock-file: /run/lockme.lock

# Boartty comes with two palettes defined internally.  The default
# palette is suitable for use on a terminal with a dark background.
# The "light" palette is for a terminal with a white or light
# background.  You may customize the colors in either of those
# palettes, or define your own palette.

# The following alters two colors in the default palette, one color in
# the light palette, and one color in a custom palette.  If any color
# is not defined in a palette, the value from the default palette is
# used.  The values are a list of at least two elements describing the
# colors to be use for the foreground and background colors.
# Additional elements can specify (in order) the color to use for
# monochrome terminals, the foreground, and background colors to use
# in high-color terminals.

# For a reference of possible color names, see:
# http://urwid.org/manual/displayattributes.html#foreground-and-background-settings
# To see the list of possible palette entries, run "boartty --print-palette".

palettes:
  - name: default
    task-title: ['light green', '']
    task-id: ['dark cyan', '']
  - name: light
    task-project: ['dark blue', '']
  - name: custom
    task-project: ['dark red', '']

# Palettes may be selected at runtime with the "-p PALETTE" command
# line option, or you may set the default palette here:
# palette: light

# Keymaps work the same way as palettes.  Two keymaps are defined
# internally, the 'default' keymap and the 'vi' keymap.  Individual
# keys may be overridden and custom keymaps defined and selected in
# the config file or the command line.

# Each keymap contains a mapping of command -> key(s).  If a command
# is not specified, Boartty will use the keybinding specified in the
# default map.  More than one key can be bound to a command.

# Run "boartty --print-keymap" for a list of commands that can be
# bound.

keymaps:
  - name: default
    leave-comment: 'r'
  - name: custom
    leave-comment: ['r', 'R']
  - name: osx  # OS X blocks ctrl+o
    story-search: 'ctrl s'
# To specify a sequence of keys, they must be a list of keystrokes
# within a list of key series.  For example:
  - name: vi
    quit: [[':', 'q']]

# The default keymap may be selected with the '-k KEYMAP' command line
# option, or with the following line:
# keymap: custom

# Commentlinks are regular expressions that are applied to commit and
# review messages.  They can be replaced with internal or external
# links, or have colors applied.
commentlinks:
# This example matches story numbers, and replaces them with a link to
# an internal Boartty search for that story.
  - match: "(?P<id>[0-9]+)"
    replacements:
      - search:
          text: "{id}"
          query: "story:{id}"
# Any number of commentlink entries may be specified.  Start each with
# a "match" key and regex.  Named match groups within the regex may be
# used in the replacements section.  Any number of replacements may be
# specified.  The types of replacement available are:
#
# Text: Plain text whose color may be specified.  The color references
# a palette entry.
#      - text:
#          color: ""
#          text: ""
# Link: A hyperlink with the indicated text that when activated will
# open the user's browser with the supplied URL
#      - link:
#          text: ""
#          url: ""
# Search: A hyperlink that will perform a Boartty search when
# activated.
#      - search:
#          text: "{id}"
#          query: "change:{id}"

# This is the query used for the list of stories when a project is
# selected.  The default is empty.
# story-list-query: ""

# This section defines default sorting options for the story
# list. The "sort-by" key specifies the sort order, which can be
# 'number', 'updated', or 'last-seen'.  The 'reverse' key specifies
# ascending (true) or descending (false) order.
# story-list-options:
#   sort-by: 'number'
#   reverse: false

# Uncomment the following line to disable the navigation breadcrumbs
# at the bottom of the screen:
# breadcrumbs: false

# Times are displayed in the local timezone by default.  To display
# them in UTC instead, uncomment the following line:
# display-times-in-utc: true

# Boartty handles mouse input by default.  If you don't want it messing
# with your terminal's mouse handling, uncomment the following line:
# handle-mouse: false

# This section defines customized dashboards.  You can supply any
# Boartty search string and bind them to any key.  They will appear in
# the global help text, and pressing the key anywhere in Boartty will
# run the query and display the results.
#
# NB: "recentlyseen:24 hours" does not just return stories seen in the
# last 24 hours -- it returns stories seen within 24 hours of the most
# recently seen change.  So you can take the weekend off and pick up
# where you were.
dashboards:
  - name: "My stories"
    query: "creator:self status:active"
    key: "f2"
  - name: "Starred stories"
    query: "is:starred"
    key: "f3"
  - name: "Recently seen stories"
    query: "recentlyseen:24 hours"
    sort-by: "last-seen"
    reverse: True
    key: "f4"
